apiVersion: v1
kind: Pod
metadata:
  namespace: <%= namespace %>
  name: <%= id %>
  labels:
    job: <%= id %>
    app.kubernetes.io/name: <%= container.name %>
    app.kubernetes.io/managed-by: open-ondemand
spec:
  restartPolicy: <%= @restart_policy %>
  securityContext:
    runAsUser: <%= run_as_user %>
    runAsGroup: <%= run_as_group %>
    fsGroup: <%= fs_group %>
  containers:
  - name: "<%= spec.container.name %>"
    image: <%= spec.container.image %>
    imagePullPolicy: IfNotPresent
    <% unless spec.container.env.nil? %>
    env:
    <% spec.container.env.each do |env| %>
    - name: <%= env.name %>
      value: "<%= env.value %>"
    <% end %> <%# for each env %>
    <% end %> <%# unless env is nil %>
    <% unless spec.container.command.nil? %>
    command:
    <% spec.container.command.each do |cmd| %>
    - "<%= cmd %>"
    <% end %> <%# for each command %>
    <% end %> <%# unless command is nil %>
    <% unless spec.container.port.nil? %>
    ports:
    - containerPort: <%= spec.container.port %>
    <% end %> 
    volumeMounts:
    <% unless configmap.nil? %>
    - name: configmap-volume
      mountPath:  <%= configmap_mount_path %>
    <% end %>
    <% unless @mounts.nil? %>
    <% @mounts.each do |mount| %>
    - name: <%= mount['name'] %>
      mountPath: <%= mount['destination_path'] %>
    <% end %> <%# for each mount %>
    <% end %> <%# if mounts is not nil %>
  <% unless spec.init_containers.nil? %>
  initContainers:
  <% spec.init_containers.each do |ctr| %>
  - name: "<%= ctr.name %>"
    image: "<%= ctr.image %>"
    command:
    <% ctr.command.each do |cmd| %>
    - "<%= cmd %>"
    <% end %> <%# command loop  %>
  <% end %> <%# init container loop  %>
  <% end %> <%# if init containers  %>
  <% unless configmap.nil? && @mounts.nil? %>
  volumes:
  <% end %> <%# configmap.nil? || @mounts.nil? %>
  <% unless configmap.nil? %>
  - name: configmap-volume
    configMap:
      name: <%= configmap_name(id) %>
  <% end %>
  <% unless @mounts.nil? %>
  <% @mounts.each do |mount| %>
  <% if mount['type'] == 'nfs' %>
  - name: <%= mount['name'] %>
    nfs:
      server: <%= mount['host'] %>
      path: <%= mount['path'] %>
  <% end %> <%# if mount is nfs %>
  <% end %> <%# for each mount %>
  <% end %> <%# if mounts is not nil %>
---
<% unless spec.container.port.nil? %>
apiVersion: v1
kind: Service
metadata:
  name: <%= service_name(id) %>
  namespace: <%= namespace %>
spec:
  selector:
    job: <%= id %>
  ports:
  - protocol: TCP
    port: 80
    targetPort: <%= spec.container.port %>
  type: NodePort
<% end %> <%# end for service %>
---
<% unless configmap.nil? %>
apiVersion: v1
kind: ConfigMap
metadata:
  name: <%= configmap_name(id) %>
  namespace: <%= namespace %>
data:
  <%= configmap.filename %>: |
    <%= configmap.data %>
<% end %> <%# end for configmap %>
